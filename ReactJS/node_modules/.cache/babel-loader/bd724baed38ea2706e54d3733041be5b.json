{"ast":null,"code":"import actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  isLoadingGender: false,\n  genders: [],\n  roles: [],\n  positions: []\n};\n\nconst adminReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_GENDER_START:\n      let copyState = { ...state\n      };\n      copyState.isLoadingGender = true;\n      return { ...copyState\n      };\n\n    case actionTypes.FETCH_GENDER_SUCCESS:\n      state.genders = action.data;\n      state.isLoadingGender = false;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_GENDER_FAILED:\n      state.isLoadingGender = false;\n      state.genders = [];\n      return { ...copyState\n      };\n\n    case actionTypes.FETCH_POSITION_SUCCESS:\n      state.positions = action.data;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_POSITION_FAILED:\n      state.positions = [];\n      return { ...copyState\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default adminReducer;","map":{"version":3,"sources":["C:/LT Front End/BookingCareRun/BookingCare1/ReactJS/src/store/reducers/adminReducer.js"],"names":["actionTypes","initialState","isLoadingGender","genders","roles","positions","adminReducer","state","action","type","FETCH_GENDER_START","copyState","FETCH_GENDER_SUCCESS","data","FETCH_GENDER_FAILED","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAILED"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,wBAAxB;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,SAAS,EAAE;AAJM,CAArB;;AAOA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,WAAW,CAACU,kBAAjB;AACI,UAAIC,SAAS,GAAE,EAAC,GAAGJ;AAAJ,OAAf;AACAI,MAAAA,SAAS,CAACT,eAAV,GAA4B,IAA5B;AAEF,aAAO,EACL,GAAGS;AADE,OAAP;;AAGF,SAAKX,WAAW,CAACY,oBAAjB;AACIL,MAAAA,KAAK,CAACJ,OAAN,GAAgBK,MAAM,CAACK,IAAvB;AACAN,MAAAA,KAAK,CAACL,eAAN,GAAwB,KAAxB;AACF,aAAO,EACL,GAAGK;AADE,OAAP;;AAGF,SAAKP,WAAW,CAACc,mBAAjB;AAEIP,MAAAA,KAAK,CAACL,eAAN,GAAwB,KAAxB;AACAK,MAAAA,KAAK,CAACJ,OAAN,GAAgB,EAAhB;AACF,aAAO,EACL,GAAGQ;AADE,OAAP;;AAIA,SAAKX,WAAW,CAACe,sBAAjB;AACER,MAAAA,KAAK,CAACF,SAAN,GAAkBG,MAAM,CAACK,IAAzB;AACF,aAAO,EACL,GAAGN;AADE,OAAP;;AAGF,SAAKP,WAAW,CAACgB,qBAAjB;AACIT,MAAAA,KAAK,CAACF,SAAN,GAAkB,EAAlB;AACF,aAAO,EACL,GAAGM;AADE,OAAP;;AAGF;AACE,aAAOJ,KAAP;AAjCJ;AAmCD,CApCD;;AAsCA,eAAeD,YAAf","sourcesContent":["import actionTypes from \"../actions/actionTypes\";\r\nconst initialState = {\r\n    isLoadingGender: false,\r\n    genders: [],\r\n    roles: [],\r\n    positions: []\r\n};\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_GENDER_START:\r\n        let copyState ={...state}\r\n        copyState.isLoadingGender = true;\r\n\r\n      return {\r\n        ...copyState\r\n      }\r\n    case actionTypes.FETCH_GENDER_SUCCESS:\r\n        state.genders = action.data;\r\n        state.isLoadingGender = false;\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_GENDER_FAILED:\r\n\r\n        state.isLoadingGender = false;\r\n        state.genders = [];\r\n      return {\r\n        ...copyState\r\n      }\r\n\r\n      case actionTypes.FETCH_POSITION_SUCCESS:\r\n        state.positions = action.data;\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_POSITION_FAILED:\r\n        state.positions = [];\r\n      return {\r\n        ...copyState\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default adminReducer;"]},"metadata":{},"sourceType":"module"}